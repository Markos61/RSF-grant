# -*- coding: cp1251 -*-
##
import pandas as pd
from tqdm import tqdm
import sys
import ast
sys.path.append(r"E:\PycharmProjects\PARsing\grant")
from similarity_funcs import make_example_tensor, similarity_economic_meaning, get_embedding
from find_files import xlsx_in_directory

files = xlsx_in_directory(r'E:\Грант\Формализация', '')

# Нарративы-примеры
narratives = [
    "государство", "разрешает", "рыночную экономику",
    "государство", "разрешает", "свободные цены",
    "государство", "дерегулирует", "экономику",
    "государство", "осуществляет приватизацию", "убыточных предприятий государственного сектора",
    "государство", "не вмешивается", "рынки",
    "рынки", "способствуют формированию", "свободные цены",
    "Частный собственник", "конкурирует", "экономическая эффективность",
    "государство", "ограничивает деятельность", "государство",
    "государство", "защищает", "права собственности",
    "государство", "минимизирует", "дефицит бюджета",
    "государство", "снижает", "расходы на государственное управление, оборону, субсидирование",
    "государство", "повышает", "расходы на здравоохранение, образование и инфраструктуру",
    "государство", "расширяет", "налоговую базу",
    "государство", "снижает", "предельные налоговые ставки",
    "рынки", "способствуют формированию", "процентные ставки",
    "государство", "не вмешивается в формирование", "процентные ставки",
    "государство", "поддерживает на низком уровне", "обменный курс национальной валюты",
    "государство", "поддерживает единство", "обменный курс национальной валюты",
    "государство", "отменяет ограничения", "экспорт и импорт",
    "государство", "отменяет ограничения", "иностранные инвестиции",
    "государство", "приватизирует", "государственные предприятия",
    "государство", "отменяет ограничения", "конкуренция",
    "государство", "защищает", "права собственности",
    "государство", "приватизирует", "государственные предприятия",
    "центральный банк", "осуществляет денежную эмиссию с постоянным низким темпом", "денежная масса",
    "фирмы", "производят", "товары",
    "государство", "не вмешивается в выбор фирмами производимых товаров", "фирмы",
    "государство", "управляет для стимулирования развития", "государственные предприятия",
    "государство", "концентрирует ресурсы на приоритетных направлениях", "фирмы и государственные предприятия",
    "государство", "реализует", "национальные проекты для экономического роста",
    "государство", "поддерживает", "инновационные предприятия",
    "цивилизация", "развивается", "экономическая система",
    "государство", "помогает расти", "эффективные институты",
    "государство", "прикрывается", "экологическая необходимость",
    "государство", "управляет", "экономика",
    "государство", "управляет при помощи науки", "экономика",
    "государство", "должно вмешиваться", "экономика",
    "государство", "не вмешивается и проигрывает", "экономика",
    "государство", "сохраняет", "управление экономикой"
]

# Тензоры нарративов-примеров
examples = make_example_tensor(narratives)

for file in tqdm(files[:7], 'Подсчёт схожести'):
    df = pd.read_excel(file)
    result = df[['actors', 'actions', 'objects']].values.flatten().tolist()
    cleaned = [' '.join(ast.literal_eval(item)) for item in result]
    # Получаем вектора для списка [актор, действие, объект]
    embs = get_embedding(cleaned)
    for idx, example in enumerate(examples):
        res = similarity_economic_meaning(embs, example)
        df.insert(0, f'similarity_{idx}', res)
        file_write = file.replace('Формализация', 'Формализация и схожесть')
        df.to_excel(fr'{file_write}', index=False)


# max_rows = df.nlargest(100, 'similarity')
# max_rows.to_excel(fr'E:\Грант\схожесть_{narrative}.xlsx', index=False)
